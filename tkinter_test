import tkinter
from tkinter import PhotoImage
import tkinter as tk
from tkinter import *
from PIL import Image, ImageTk


r=tk.Tk()

# Load the image
image = Image.open('TOR_Elf_Character_Sheet_fillable (1).png')

# Get the image size
image_width, image_height = image.size

# Define the window size
window_width = 800
window_height = 600

# Calculate the aspect ratio of the image
aspect_ratio = image_width / image_height

# Calculate the new image size to fit in the window while maintaining aspect ratio
new_image_width = window_width
new_image_height = int(new_image_width / aspect_ratio)

# Resize the image
image = image.resize((new_image_width, new_image_height))

# Create the Tkinter window
r.geometry(f'{window_width}x{window_height}')

# Create a Tkinter-compatible image
tk_image = ImageTk.PhotoImage(image)

def set_aspect(content_frame, pad_frame, aspect_ratio):
    # a function which places a frame within a containing frame, and
    # then forces the inner frame to keep a specific aspect ratio

    def enforce_aspect_ratio(event):
        # when the pad window resizes, fit the content into it,
        # either by fixing the width or the height and then
        # adjusting the height or width based on the aspect ratio.

        # start by using the width as the controlling dimension
        desired_width = event.width
        desired_height = int(event.width / aspect_ratio)

        # if the window is too tall to fit, use the height as
        # the controlling dimension
        if desired_height > event.height:
            desired_height = event.height
            desired_width = int(event.height * aspect_ratio)

        # place the window, giving it an explicit size
        content_frame.place(in_=pad_frame, x=0, y=0, 
            width=desired_width, height=desired_height)

    pad_frame.bind("<Configure>", enforce_aspect_ratio)

pad_frame = tk.Frame(borderwidth=0, background="black", width=200, height=200)
pad_frame.grid(row=0, column=0, sticky="nsew")
content_frame=tk.Frame(r,borderwidth=5,relief=GROOVE, background="black")

tk.Label(content_frame,text='content').pack()

r.title("One Ring Character Manager")

screen_width = r.winfo_screenwidth()
screen_height = r.winfo_screenheight()

r.geometry(f"{screen_width}x{screen_height}")
tk_image.label = tkinter.Label(content_frame, image=image)
tk_image.label.place(relx=0, rely=0, width=1920, height=1080)


set_aspect(content_frame, pad_frame, aspect_ratio=2.0/1.0) 
r.rowconfigure(0, weight=1)
r.columnconfigure(0, weight=1)
r.mainloop()